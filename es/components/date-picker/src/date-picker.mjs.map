{"version":3,"file":"date-picker.mjs","sources":["../../../../../../packages/components/date-picker/src/date-picker.tsx"],"sourcesContent":["import { computed, defineComponent, provide, reactive, ref, toRef } from 'vue'\nimport dayjs from 'dayjs'\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js'\nimport advancedFormat from 'dayjs/plugin/advancedFormat.js'\nimport localeData from 'dayjs/plugin/localeData.js'\nimport weekOfYear from 'dayjs/plugin/weekOfYear.js'\nimport weekYear from 'dayjs/plugin/weekYear.js'\nimport dayOfYear from 'dayjs/plugin/dayOfYear.js'\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter.js'\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore.js'\nimport { ElRadioButton, ElRadioGroup } from '@element-plus/components/radio'\nimport { useNamespace } from '@element-plus/hooks'\nimport {\n  CommonPicker,\n  DEFAULT_FORMATS_DATE,\n  DEFAULT_FORMATS_DATEPICKER,\n  type DateModelType,\n  type SingleOrRange,\n} from '@element-plus/components/time-picker'\nimport { ROOT_PICKER_INJECTION_KEY } from './constants'\n\nimport { SelectType, datePickerProps } from './props/date-picker'\nimport { getPanel } from './panel-utils'\nimport type { DatePickerExpose } from './instance'\n\ndayjs.extend(localeData)\ndayjs.extend(advancedFormat)\ndayjs.extend(customParseFormat)\ndayjs.extend(weekOfYear)\ndayjs.extend(weekYear)\ndayjs.extend(dayOfYear)\ndayjs.extend(isSameOrAfter)\ndayjs.extend(isSameOrBefore)\n\nexport default defineComponent({\n  name: 'ElDatePicker',\n  install: null,\n  props: datePickerProps,\n  emits: ['update:modelValue'],\n  setup(props, { expose, emit, slots }) {\n    const ns = useNamespace('picker-panel')\n\n    provide('ElPopperOptions', reactive(toRef(props, 'popperOptions')))\n    provide(ROOT_PICKER_INJECTION_KEY, {\n      slots,\n      pickerNs: ns,\n    })\n\n    const selectType = ref<SelectType | undefined>(props.typeList?.[0])\n\n    const handleRadioChange = (value: any) => {\n      selectType.value = value\n    }\n    const commonPicker = ref<InstanceType<typeof CommonPicker>>()\n    const refProps: DatePickerExpose = {\n      selectType,\n      focus: () => {\n        commonPicker.value?.focus()\n      },\n      blur: () => {\n        commonPicker.value?.blur()\n      },\n      handleOpen: () => {\n        commonPicker.value?.handleOpen()\n      },\n      handleClose: () => {\n        commonPicker.value?.handleClose()\n      },\n    }\n\n    expose(refProps)\n\n    const onModelValueUpdated = (val: SingleOrRange<DateModelType> | null) => {\n      emit('update:modelValue', val)\n    }\n\n    const componentType = computed(() => {\n      return selectType.value || props.type\n    })\n\n    return () => {\n      // since props always have all defined keys on it, {format, ...props} will always overwrite format\n      // pick props.format or provide default value here before spreading\n      const format =\n        props.format ??\n        (DEFAULT_FORMATS_DATEPICKER[componentType.value] ||\n          DEFAULT_FORMATS_DATE)\n\n      const Component = getPanel(componentType.value)\n\n      return (\n        <CommonPicker\n          {...props}\n          format={format}\n          type={componentType.value}\n          ref={commonPicker}\n          onUpdate:modelValue={onModelValueUpdated}\n        >\n          {{\n            default: (scopedProps: /**FIXME: remove any type */ any) => (\n              <>\n                {props.typeList?.length > 0 && (\n                  <ElRadioGroup\n                    modelValue={selectType.value}\n                    onChange={handleRadioChange}\n                    size=\"small\"\n                  >\n                    {props.typeList.map((type) => (\n                      <ElRadioButton\n                        key={type}\n                        value={type}\n                        label={type}\n                        class={{ 'is-active': selectType.value === type }}\n                      />\n                    ))}\n                  </ElRadioGroup>\n                )}\n                <Component {...scopedProps}>\n                  {{\n                    'prev-month': slots['prev-month'],\n                    'next-month': slots['next-month'],\n                    'prev-year': slots['prev-year'],\n                    'next-year': slots['next-year'],\n                  }}\n                </Component>\n              </>\n            ),\n            'range-separator': slots['range-separator'],\n            open: slots['open'],\n          }}\n        </CommonPicker>\n      )\n    }\n  },\n})\n"],"names":["dayjs","extend","localeData","advancedFormat","customParseFormat","weekOfYear","weekYear","dayOfYear","defineComponent","name","install","props","emit","slots","provide","pickerNs","ns","selectType","ref","handleRadioChange","value","commonPicker","focus","blur","handleOpen","handleClose","expose","refProps","onModelValueUpdated","val","_createVNode","_mergeProps","getPanel","componentType","default","scopedProps","_Fragment","type"],"mappings":"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"}