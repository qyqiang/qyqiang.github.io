{"version":3,"file":"select.js","sources":["../../../../../../packages/components/select-v2/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelect.b(), nsSelect.m(selectSize)]\"\n    @mouseenter=\"states.inputHovering = true\"\n    @mouseleave=\"states.inputHovering = false\"\n  >\n    <el-tooltip\n      ref=\"tooltipRef\"\n      :visible=\"dropdownMenuVisible\"\n      :teleported=\"teleported\"\n      :popper-class=\"[nsSelect.e('popper'), popperClass]\"\n      :gpu-acceleration=\"false\"\n      :stop-popper-mouse-event=\"false\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"fallbackPlacements\"\n      :effect=\"effect\"\n      :placement=\"placement\"\n      pure\n      :transition=\"`${nsSelect.namespace.value}-zoom-in-top`\"\n      trigger=\"click\"\n      :persistent=\"persistent\"\n      :append-to=\"appendTo\"\n      :show-arrow=\"showArrow\"\n      :offset=\"offset\"\n      @before-show=\"handleMenuEnter\"\n      @hide=\"states.isBeforeHide = false\"\n    >\n      <template #default>\n        <div\n          ref=\"wrapperRef\"\n          :class=\"[\n            nsSelect.e('wrapper'),\n            nsSelect.is('focused', isFocused),\n            nsSelect.is('hovering', states.inputHovering),\n            nsSelect.is('filterable', filterable),\n            nsSelect.is('disabled', selectDisabled),\n            nsSelect.is('value', hasModelValue),\n            preStar && !isFocused && !hasModelValue ? 'pre-star-item' : '',\n          ]\"\n          @click.prevent=\"toggleMenu\"\n        >\n          <span v-if=\"floatLabel\" class=\"float-label\">{{ placeholder }}</span>\n          <div\n            v-if=\"$slots.prefix\"\n            ref=\"prefixRef\"\n            :class=\"nsSelect.e('prefix')\"\n          >\n            <slot name=\"prefix\" />\n          </div>\n          <div\n            ref=\"selectionRef\"\n            :class=\"[\n              nsSelect.e('selection'),\n              nsSelect.is(\n                'near',\n                multiple && !$slots.prefix && !!modelValue.length\n              ),\n            ]\"\n          >\n            <slot v-if=\"multiple\" name=\"tag\">\n              <div\n                v-for=\"item in showTagList\"\n                :key=\"getValueKey(getValue(item))\"\n                :class=\"nsSelect.e('selected-item')\"\n              >\n                <el-tag\n                  :closable=\"!selectDisabled && !getDisabled(item)\"\n                  :size=\"collapseTagSize\"\n                  :type=\"tagType\"\n                  :effect=\"tagEffect\"\n                  disable-transitions\n                  :style=\"tagStyle\"\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span :class=\"nsSelect.e('tags-text')\">\n                    <slot\n                      name=\"label\"\n                      :label=\"getLabel(item)\"\n                      :value=\"getValue(item)\"\n                    >\n                      {{ getLabel(item) }}\n                    </slot>\n                  </span>\n                </el-tag>\n              </div>\n\n              <el-tooltip\n                v-if=\"collapseTags && modelValue.length > maxCollapseTags\"\n                ref=\"tagTooltipRef\"\n                :disabled=\"dropdownMenuVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                :effect=\"effect\"\n                placement=\"bottom\"\n                :teleported=\"teleported\"\n              >\n                <template #default>\n                  <div\n                    ref=\"collapseItemRef\"\n                    :class=\"nsSelect.e('selected-item')\"\n                  >\n                    <el-tag\n                      :closable=\"false\"\n                      :size=\"collapseTagSize\"\n                      :type=\"tagType\"\n                      :effect=\"tagEffect\"\n                      :style=\"collapseTagStyle\"\n                      disable-transitions\n                    >\n                      <span :class=\"nsSelect.e('tags-text')\">\n                        + {{ modelValue.length - maxCollapseTags }}\n                      </span>\n                    </el-tag>\n                  </div>\n                </template>\n                <template #content>\n                  <div ref=\"tagMenuRef\" :class=\"nsSelect.e('selection')\">\n                    <div\n                      v-for=\"selected in collapseTagList\"\n                      :key=\"getValueKey(getValue(selected))\"\n                      :class=\"nsSelect.e('selected-item')\"\n                    >\n                      <el-tag\n                        class=\"in-tooltip\"\n                        :closable=\"!selectDisabled && !getDisabled(selected)\"\n                        :size=\"collapseTagSize\"\n                        :type=\"tagType\"\n                        :effect=\"tagEffect\"\n                        disable-transitions\n                        @close=\"deleteTag($event, selected)\"\n                      >\n                        <span :class=\"nsSelect.e('tags-text')\">\n                          <slot\n                            name=\"label\"\n                            :label=\"getLabel(selected)\"\n                            :value=\"getValue(selected)\"\n                          >\n                            {{ getLabel(selected) }}\n                          </slot>\n                        </span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </slot>\n            <div\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('input-wrapper'),\n                nsSelect.is('hidden', !filterable),\n              ]\"\n            >\n              <input\n                :id=\"inputId\"\n                ref=\"inputRef\"\n                v-model=\"states.inputValue\"\n                :style=\"inputStyle\"\n                :autocomplete=\"autocomplete\"\n                :tabindex=\"tabindex\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                autocapitalize=\"off\"\n                :aria-expanded=\"expanded\"\n                :aria-label=\"ariaLabel\"\n                :class=\"[nsSelect.e('input'), nsSelect.is(selectSize)]\"\n                :disabled=\"selectDisabled\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :name=\"name\"\n                @input=\"onInput\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.delete.stop=\"handleDel\"\n                @click.stop=\"toggleMenu\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelect.e('input-calculator')\"\n                v-text=\"states.inputValue\"\n              />\n            </div>\n            <div\n              v-if=\"shouldShowPlaceholder && hasModelValue\"\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('placeholder'),\n                nsSelect.is(\n                  'transparent',\n                  !hasModelValue || (expanded && !states.inputValue)\n                ),\n              ]\"\n            >\n              <slot\n                name=\"label\"\n                :label=\"currentPlaceholder\"\n                :value=\"modelValue\"\n              >\n                <span>{{ currentPlaceholder }}</span>\n              </slot>\n            </div>\n          </div>\n          <div ref=\"suffixRef\" :class=\"nsSelect.e('suffix')\">\n            <el-icon\n              v-if=\"iconComponent\"\n              v-show=\"!showClearBtn\"\n              :class=\"[nsSelect.e('caret'), nsInput.e('icon'), iconReverse]\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"12\"\n                height=\"12\"\n                viewBox=\"0 0 12 12\"\n              >\n                <path\n                  d=\"M5.99992 7.75002C5.86862 7.75024 5.73856 7.72452 5.61723 7.67432C5.4959 7.62413 5.38569 7.55045 5.29292 7.45752L2.64642 4.81052L3.35342 4.10352L5.99992 6.75002L8.64642 4.10352L9.35342 4.81052L6.70692 7.45702C6.6142 7.55004 6.50401 7.62381 6.38267 7.67409C6.26134 7.72438 6.13126 7.75018 5.99992 7.75002Z\"\n                />\n              </svg>\n            </el-icon>\n            <el-icon\n              v-if=\"showClearBtn && clearIcon\"\n              :class=\"[\n                nsSelect.e('caret'),\n                nsInput.e('icon'),\n                nsSelect.e('clear'),\n              ]\"\n              @click.prevent.stop=\"handleClear\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"12\"\n                height=\"12\"\n                viewBox=\"0 0 12 12\"\n              >\n                <path\n                  d=\"M9.35349 3.35342L8.64648 2.64642L5.99998 5.29292L3.35348 2.64642L2.64648 3.35342L5.29298 5.99992L2.64648 8.64642L3.35348 9.35342L5.99998 6.70692L8.64648 9.35342L9.35349 8.64642L6.70698 5.99992L9.35349 3.35342Z\"\n                />\n              </svg>\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon && needStatusIcon\"\n              :class=\"[\n                nsInput.e('icon'),\n                nsInput.e('validateIcon'),\n                nsInput.is('loading', validateState === 'validating'),\n              ]\"\n              v-html=\"validateIcon\"\n            />\n          </div>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu\n          ref=\"menuRef\"\n          :data=\"filteredOptions\"\n          :width=\"popperSize\"\n          :hovering-index=\"states.hoveringIndex\"\n          :scrollbar-always-on=\"scrollbarAlwaysOn\"\n        >\n          <template v-if=\"$slots.header\" #header>\n            <div :class=\"nsSelect.be('dropdown', 'header')\">\n              <slot name=\"header\" />\n            </div>\n          </template>\n          <template #default=\"scope\">\n            <slot v-bind=\"scope\" />\n          </template>\n          <template v-if=\"$slots.loading && loading\" #loading>\n            <div :class=\"nsSelect.be('dropdown', 'loading')\">\n              <slot name=\"loading\" />\n            </div>\n          </template>\n          <template v-else-if=\"loading || filteredOptions.length === 0\" #empty>\n            <div :class=\"nsSelect.be('dropdown', 'empty')\">\n              <slot name=\"empty\">\n                <span>{{ emptyText }}</span>\n              </slot>\n            </div>\n          </template>\n          <template v-if=\"$slots.footer\" #footer>\n            <div :class=\"nsSelect.be('dropdown', 'footer')\">\n              <slot name=\"footer\" />\n            </div>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, provide, reactive, toRefs } from 'vue'\nimport { isArray } from '@element-plus/utils'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { useCalcInputWidth } from '@element-plus/hooks'\nimport ElSelectMenu from './select-dropdown'\nimport useSelect from './useSelect'\nimport { SelectProps, selectEmits } from './defaults'\nimport { selectV2InjectionKey } from './token'\n\nexport default defineComponent({\n  name: 'ElSelectV2',\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside },\n  props: SelectProps,\n  emits: selectEmits,\n  setup(props, { emit }) {\n    const modelValue = computed(() => {\n      const { modelValue: rawModelValue, multiple } = props\n      const fallback = multiple ? [] : undefined\n      // When it is array, we check if this is multi-select.\n      // Based on the result we get\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback\n      }\n      return multiple ? fallback : rawModelValue\n    })\n\n    const API = useSelect(\n      reactive({\n        ...toRefs(props),\n        modelValue,\n      }),\n      emit\n    )\n    const { calculatorRef, inputStyle } = useCalcInputWidth()\n\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n        modelValue,\n      }),\n      expanded: API.expanded,\n      tooltipRef: API.tooltipRef,\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect,\n    })\n\n    const selectedLabel = computed(() => {\n      if (!props.multiple) {\n        return API.states.selectedLabel\n      }\n      return API.states.cachedOptions.map((i) => i.label as string)\n    })\n\n    return {\n      ...API,\n      modelValue,\n      selectedLabel,\n      calculatorRef,\n      inputStyle,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","ElSelectMenu","ElTag","ElTooltip","ElIcon","ClickOutside","SelectProps","selectEmits","computed","isArray","useSelect","reactive","toRefs","useCalcInputWidth","provide","selectV2InjectionKey","_resolveComponent","_createVNode","_withCtx","_createElementVNode","_withModifiers","_openBlock","_createElementBlock","_toDisplayString","_createCommentVNode","_normalizeClass","_renderSlot","_Fragment","_renderList","_normalizeStyle","_createTextVNode","_createBlock","_withDirectives","_withKeys","_vModelText","_createSlots","_normalizeProps","_guardReactiveProps","_export_sfc"],"mappings":"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"}