{"version":3,"file":"select2.js","sources":["../../../../../../packages/components/select/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelect.b(), nsSelect.m(selectSize)]\"\n    @[mouseEnterEventName]=\"states.inputHovering = true\"\n    @mouseleave=\"states.inputHovering = false\"\n  >\n    <el-tooltip\n      ref=\"tooltipRef\"\n      :visible=\"dropdownMenuVisible\"\n      :placement=\"placement\"\n      :teleported=\"teleported\"\n      :popper-class=\"[nsSelect.e('popper'), popperClass]\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"fallbackPlacements\"\n      :effect=\"effect\"\n      pure\n      trigger=\"click\"\n      :transition=\"`${nsSelect.namespace.value}-zoom-in-top`\"\n      :stop-popper-mouse-event=\"false\"\n      :gpu-acceleration=\"false\"\n      :persistent=\"persistent\"\n      :append-to=\"appendTo\"\n      :show-arrow=\"showArrow\"\n      :offset=\"offset\"\n      @before-show=\"handleMenuEnter\"\n      @hide=\"states.isBeforeHide = false\"\n    >\n      <template #default>\n        <div\n          ref=\"wrapperRef\"\n          :class=\"[\n            nsSelect.e('wrapper'),\n            nsSelect.is('focused', isFocused),\n            nsSelect.is('hovering', states.inputHovering),\n            nsSelect.is('filterable', filterable),\n            nsSelect.is('disabled', selectDisabled),\n            nsSelect.is('value', hasModelValue),\n            preStar && !isFocused && !hasModelValue ? 'pre-star-item' : '',\n          ]\"\n          @click.prevent=\"toggleMenu\"\n        >\n          <span\n            v-if=\"floatLabel\"\n            class=\"float-label\"\n            :class=\"{ 'prefix-label': $slots.prefix }\"\n          >\n            {{ placeholder }}\n          </span>\n          <div\n            v-if=\"$slots.prefix\"\n            ref=\"prefixRef\"\n            :class=\"nsSelect.e('prefix')\"\n          >\n            <slot name=\"prefix\" />\n          </div>\n          <div\n            ref=\"selectionRef\"\n            :class=\"[\n              nsSelect.e('selection'),\n              nsSelect.is(\n                'near',\n                multiple && !$slots.prefix && !!states.selected.length\n              ),\n            ]\"\n          >\n            <slot v-if=\"multiple\" name=\"tag\">\n              <div\n                v-for=\"item in showTagList\"\n                :key=\"getValueKey(item)\"\n                :class=\"nsSelect.e('selected-item')\"\n              >\n                <el-tag\n                  :closable=\"!selectDisabled && !item.isDisabled\"\n                  :size=\"collapseTagSize\"\n                  :type=\"tagType\"\n                  :effect=\"tagEffect\"\n                  disable-transitions\n                  :style=\"tagStyle\"\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span :class=\"nsSelect.e('tags-text')\">\n                    <slot\n                      name=\"label\"\n                      :label=\"item.currentLabel\"\n                      :value=\"item.value\"\n                    >\n                      {{ item.currentLabel }}\n                    </slot>\n                  </span>\n                </el-tag>\n              </div>\n\n              <el-tooltip\n                v-if=\"collapseTags && states.selected.length > maxCollapseTags\"\n                ref=\"tagTooltipRef\"\n                :disabled=\"dropdownMenuVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                :effect=\"effect\"\n                placement=\"bottom\"\n                :teleported=\"teleported\"\n              >\n                <template #default>\n                  <div\n                    ref=\"collapseItemRef\"\n                    :class=\"nsSelect.e('selected-item')\"\n                  >\n                    <el-tag\n                      :closable=\"false\"\n                      :size=\"collapseTagSize\"\n                      :type=\"tagType\"\n                      :effect=\"tagEffect\"\n                      disable-transitions\n                      :style=\"collapseTagStyle\"\n                    >\n                      <span :class=\"nsSelect.e('tags-text')\">\n                        + {{ states.selected.length - maxCollapseTags }}\n                      </span>\n                    </el-tag>\n                  </div>\n                </template>\n                <template #content>\n                  <div ref=\"tagMenuRef\" :class=\"nsSelect.e('selection')\">\n                    <div\n                      v-for=\"item in collapseTagList\"\n                      :key=\"getValueKey(item)\"\n                      :class=\"nsSelect.e('selected-item')\"\n                    >\n                      <el-tag\n                        class=\"in-tooltip\"\n                        :closable=\"!selectDisabled && !item.isDisabled\"\n                        :size=\"collapseTagSize\"\n                        :type=\"tagType\"\n                        :effect=\"tagEffect\"\n                        disable-transitions\n                        @close=\"deleteTag($event, item)\"\n                      >\n                        <span :class=\"nsSelect.e('tags-text')\">\n                          <slot\n                            name=\"label\"\n                            :label=\"item.currentLabel\"\n                            :value=\"item.value\"\n                          >\n                            {{ item.currentLabel }}\n                          </slot>\n                        </span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </slot>\n            <div\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('input-wrapper'),\n                nsSelect.is('hidden', !filterable),\n              ]\"\n            >\n              <input\n                :id=\"inputId\"\n                ref=\"inputRef\"\n                v-model=\"states.inputValue\"\n                type=\"text\"\n                :name=\"name\"\n                :class=\"[nsSelect.e('input'), nsSelect.is(selectSize)]\"\n                :disabled=\"selectDisabled\"\n                :autocomplete=\"autocomplete\"\n                :style=\"inputStyle\"\n                :tabindex=\"tabindex\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                :aria-activedescendant=\"hoverOption?.id || ''\"\n                :aria-controls=\"contentId\"\n                :aria-expanded=\"dropdownMenuVisible\"\n                :aria-label=\"ariaLabel\"\n                aria-autocomplete=\"none\"\n                aria-haspopup=\"listbox\"\n                @keydown.down.stop.prevent=\"navigateOptions('next')\"\n                @keydown.up.stop.prevent=\"navigateOptions('prev')\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.enter.stop.prevent=\"selectOption\"\n                @keydown.delete.stop=\"deletePrevTag\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @input=\"onInput\"\n                @click.stop=\"toggleMenu\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelect.e('input-calculator')\"\n                v-text=\"states.inputValue\"\n              />\n            </div>\n            <div\n              v-if=\"!floatLabel || (shouldShowPlaceholder && hasModelValue)\"\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('placeholder'),\n                nsSelect.is(\n                  'transparent',\n                  !hasModelValue || (expanded && !states.inputValue)\n                ),\n              ]\"\n            >\n              <slot\n                name=\"label\"\n                :label=\"currentPlaceholder\"\n                :value=\"modelValue\"\n              >\n                <span>{{ currentPlaceholder }}</span>\n              </slot>\n            </div>\n          </div>\n          <div ref=\"suffixRef\" :class=\"nsSelect.e('suffix')\">\n            {{ labelSuffix }}\n            <template v-if=\"$slots.info\">\n              <slot name=\"info\" />\n            </template>\n            <el-icon\n              v-if=\"iconComponent && !showClose\"\n              :class=\"[nsSelect.e('caret'), nsSelect.e('icon'), iconReverse]\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"12\"\n                height=\"12\"\n                viewBox=\"0 0 12 12\"\n              >\n                <path\n                  d=\"M5.99992 7.75002C5.86862 7.75024 5.73856 7.72452 5.61723 7.67432C5.4959 7.62413 5.38569 7.55045 5.29292 7.45752L2.64642 4.81052L3.35342 4.10352L5.99992 6.75002L8.64642 4.10352L9.35342 4.81052L6.70692 7.45702C6.6142 7.55004 6.50401 7.62381 6.38267 7.67409C6.26134 7.72438 6.13126 7.75018 5.99992 7.75002Z\"\n                />\n              </svg>\n            </el-icon>\n            <el-icon\n              v-if=\"showClose && clearIcon\"\n              :class=\"[\n                nsSelect.e('caret'),\n                nsSelect.e('icon'),\n                nsSelect.e('clear'),\n              ]\"\n              @click=\"handleClearClick\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"12\"\n                height=\"12\"\n                viewBox=\"0 0 12 12\"\n              >\n                <path\n                  d=\"M9.35349 3.35342L8.64648 2.64642L5.99998 5.29292L3.35348 2.64642L2.64648 3.35342L5.29298 5.99992L2.64648 8.64642L3.35348 9.35342L5.99998 6.70692L8.64648 9.35342L9.35349 8.64642L6.70698 5.99992L9.35349 3.35342Z\"\n                />\n              </svg>\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon\"\n              :class=\"[\n                nsInput.e('icon'),\n                nsInput.e('validateIcon'),\n                nsInput.is('loading', validateState === 'validating'),\n              ]\"\n              v-html=\"validateIcon\"\n            />\n          </div>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu ref=\"menuRef\">\n          <div\n            v-if=\"$slots.header\"\n            :class=\"nsSelect.be('dropdown', 'header')\"\n            @click.stop\n          >\n            <slot name=\"header\" />\n          </div>\n          <el-scrollbar\n            v-show=\"states.options.size > 0 && !loading\"\n            :id=\"contentId\"\n            ref=\"scrollbarRef\"\n            tag=\"ul\"\n            :wrap-class=\"nsSelect.be('dropdown', 'wrap')\"\n            :view-class=\"nsSelect.be('dropdown', 'list')\"\n            :class=\"[nsSelect.is('empty', filteredOptionsCount === 0)]\"\n            role=\"listbox\"\n            :aria-label=\"ariaLabel\"\n            aria-orientation=\"vertical\"\n            @scroll=\"popupScroll\"\n          >\n            <el-option\n              v-if=\"showNewOption\"\n              :value=\"states.inputValue\"\n              :created=\"true\"\n            />\n            <el-options>\n              <slot />\n            </el-options>\n          </el-scrollbar>\n          <div\n            v-if=\"$slots.loading && loading\"\n            :class=\"nsSelect.be('dropdown', 'loading')\"\n          >\n            <slot name=\"loading\" />\n          </div>\n          <div\n            v-else-if=\"loading || filteredOptionsCount === 0\"\n            :class=\"nsSelect.be('dropdown', 'empty')\"\n          >\n            <slot name=\"empty\">\n              <span>{{ emptyText }}</span>\n            </slot>\n          </div>\n          <div\n            v-if=\"$slots.footer\"\n            :class=\"nsSelect.be('dropdown', 'footer')\"\n            @click.stop\n          >\n            <slot name=\"footer\" />\n          </div>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, provide, reactive, toRefs } from 'vue'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { isArray } from '@element-plus/utils'\nimport { useCalcInputWidth } from '@element-plus/hooks'\nimport ElOption from './option.vue'\nimport ElSelectMenu from './select-dropdown.vue'\nimport { useSelect } from './useSelect'\nimport { selectKey } from './token'\nimport ElOptions from './options'\n\nimport { SelectProps } from './select'\nimport type { SelectContext } from './token'\n\nconst COMPONENT_NAME = 'ElSelect'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  componentName: COMPONENT_NAME,\n  components: {\n    ElSelectMenu,\n    ElOption,\n    ElOptions,\n    ElTag,\n    ElScrollbar,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside },\n  props: SelectProps,\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n    'popup-scroll',\n  ],\n\n  setup(props, { emit }) {\n    const modelValue = computed(() => {\n      const { modelValue: rawModelValue, multiple } = props\n      const fallback = multiple ? [] : undefined\n      // When it is array, we check if this is multi-select.\n      // Based on the result we get\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback\n      }\n\n      return multiple ? fallback : rawModelValue\n    })\n\n    const _props = reactive({\n      ...toRefs(props),\n      modelValue,\n    })\n\n    const API = useSelect(_props, emit)\n    const { calculatorRef, inputStyle } = useCalcInputWidth()\n\n    provide(\n      selectKey,\n      reactive({\n        props: _props,\n        states: API.states,\n        optionsArray: API.optionsArray,\n        handleOptionSelect: API.handleOptionSelect,\n        onOptionCreate: API.onOptionCreate,\n        onOptionDestroy: API.onOptionDestroy,\n        selectRef: API.selectRef,\n        setSelected: API.setSelected,\n      }) as unknown as SelectContext\n    )\n\n    const selectedLabel = computed(() => {\n      if (!props.multiple) {\n        return API.states.selectedLabel\n      }\n      return API.states.selected.map((i: any) => i.currentLabel as string)\n    })\n\n    return {\n      ...API,\n      modelValue,\n      selectedLabel,\n      calculatorRef,\n      inputStyle,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","ElSelectMenu","ElOption","ElOptions","ElTag","ElScrollbar","ElTooltip","ElIcon","ClickOutside","SelectProps","UPDATE_MODEL_EVENT","CHANGE_EVENT","computed","isArray","reactive","toRefs","useSelect","useCalcInputWidth","provide","selectKey","_resolveComponent","_createVNode","_withCtx","_createElementVNode","_normalizeClass","_withModifiers","_openBlock","_createElementBlock","_toDisplayString","_createCommentVNode","_renderSlot","_Fragment","_renderList","_normalizeStyle","_createTextVNode","_createBlock","_withKeys","_vModelText","_withDirectives","_vShow","_export_sfc"],"mappings":"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"}